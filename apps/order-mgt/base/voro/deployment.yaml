apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaccine-order-optimizer
  namespace: vaccine-solution
  labels:
    app: vaccine-order-optimizer
spec:
  selector:
    matchLabels:
      app: vaccine-order-optimizer
  replicas: 1
  template:
    metadata:
      labels:
        app: vaccine-order-optimizer
    spec:
      containers:
      - name: vaccine-order-optimizer
        image: ibmcase/vaccine-order-optimizer:0.0.2
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          protocol: TCP
        envFrom:
          - configMapRef:
              name: vaccine-oro-cm
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
        env:
          - name: KAFKA_USER
            value: tls-user
          - name: KAFKA_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: tls-user 
          - name: KAFKA_CERT
            value: "/app/certs/ca.crt"
          - name: PYTHONUNBUFFERED
            value: "yes"
          - name: JSONIFY_PRETTYPRINT_REGULAR
            value: "True"
          - name: FLASK_DEBUG
            value: "False"
        expose: true
        volumeMounts:
            - name: kafka-cert
              mountPath: /app/certs
        livenessProbe:
          failureThreshold: 12
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 2
        monitoring:
          labels:
            k8s-app: vaccine-order-optimizer
        pullPolicy: Always
        service:
          annotations:
            prometheus.io/scrape: "true"
          port: 8080
          type: NodePort
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
      volumes:
      - name: kafka-cert
        secret:
          secretName: vaccine-kafka-cluster-ca-cert
          